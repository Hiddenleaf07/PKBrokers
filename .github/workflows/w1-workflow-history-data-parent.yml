name: 1.0 PKBrokers Historical Data Update Parent
on:
  schedule:
    - cron: '59 9 * * 1-6'  # Monday-Saturday at 3:30 PM IST, 10AM UTC
  workflow_dispatch:  # Allow manual triggering
    inputs:
      logLevel:
        description: 'Log level for PKDevTools (default 20)'
        required: false
        default: 20
        type: number
      periods:
        description: 'space-separated periods to run (default: all)'
        required: false
        default: '("day" "minute" "5minute" "10minute" "15minute" "30minute" "60minute")'
        type: string

jobs:
  holiday-check:
    runs-on: ubuntu-latest
    outputs:
      is_holiday: ${{ steps.check_holiday.outputs.is_holiday }}
    steps:
    - name: Check for holidays
      id: check_holiday
      run: |
        # Download the holidays JSON file
        curl -s -o holidays.json https://raw.githubusercontent.com/pkjmesra/PKScreener/main/.github/dependencies/nse-holidays.json
        
        # Get current date in DD-MMM-YYYY format (e.g., 26-Jan-2025)
        CURRENT_DATE=$(date +"%d-%b-%Y")
        
        # Check if current date is in holidays list
        if jq -e --arg date "$CURRENT_DATE" '.CM[] | select(.tradingDate == $date)' holidays.json > /dev/null; then
          echo "Today ($CURRENT_DATE) is a market holiday. Exiting."
          echo "is_holiday=true" >> $GITHUB_OUTPUT
        else
          echo "Today ($CURRENT_DATE) is not a market holiday. Proceeding."
          echo "is_holiday=false" >> $GITHUB_OUTPUT
        fi

  historical-data:
    needs: holiday-check
    if: (needs.holiday-check.outputs.is_holiday == 'false' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule')
    runs-on: ubuntu-latest
    timeout-minutes: 358
    env:
      PKDevTools_Default_Log_Level: ${{ github.event.inputs.logLevel || 20 }}
    steps:
    - name: Trigger other period children jobs using API
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        periods=${{ inputs.periods }}
        
        for period in "${periods[@]}"; do
          echo "Triggering workflow for period: $period"
          
          # Convert logLevel to string and handle default value
          LOG_LEVEL="${{ github.event.inputs.logLevel || '20' }}"
          
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/w1-workflow-history-data-child.yml/dispatches \
            -d "{\"ref\":\"main\",\"inputs\":{\"period\":\"$period\",\"logLevel\":\"$LOG_LEVEL\"}}"
          
          sleep 2
        done
